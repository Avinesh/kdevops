if VAGRANT

config HAVE_SUSE_VAGRANT
	bool
	default $(shell, scripts/check_distro_kconfig.sh suse)

choice
	prompt "Vagrant Guest Linux distribution to use"
	default VAGRANT_DEBIAN if !HAVE_SUSE_VAGRANT
	default VAGRANT_SUSE if HAVE_SUSE_VAGRANT

config VAGRANT_DEBIAN
	bool "Debian"
	select HAVE_CUSTOM_DISTRO_HOST_PREFIX
	select HAVE_DISTRO_XFS_PREFERS_MANUAL if FSTESTS_XFS
	select HAVE_DISTRO_PREFERS_CUSTOM_HOST_PREFIX
	select HAVE_DISTRO_PREFERS_FSTESTS_WATCHDOG if FSTESTS_XFS
	select HAVE_DISTRO_PREFERS_FSTESTS_WATCHDOG_KILL if FSTESTS_XFS
	help
	  This option will set the target guest to Debian.

config VAGRANT_OPENSUSE
	bool "OpenSUSE"
	select HAVE_CUSTOM_DISTRO_HOST_PREFIX
	select HAVE_DISTRO_XFS_PREFERS_MANUAL if FSTESTS_XFS
	select HAVE_DISTRO_BLKTESTS_PREFERS_MANUAL if KDEVOPS_WORKFLOW_ENABLE_BLKTESTS
	select HAVE_DISTRO_PREFERS_CUSTOM_HOST_PREFIX
	help
	  This option will set the target guest to OpenSUSE.

config VAGRANT_SUSE
	bool "SUSE"
	depends on HAVE_SUSE_VAGRANT
	select HAVE_KDEVOPS_CUSTOM_DEFAULTS
	select HAVE_CUSTOM_DISTRO_HOST_PREFIX
	select HAVE_DISTRO_PREFERS_CUSTOM_HOST_PREFIX
	select HAVE_DISTRO_XFS_PREFERS_MANUAL if FSTESTS_XFS
	select HAVE_DISTRO_BTRFS_PREFERS_MANUAL if FSTESTS_BTRFS
	select HAVE_DISTRO_BLKTESTS_PREFERS_MANUAL if KDEVOPS_WORKFLOW_ENABLE_BLKTESTS
	select HAVE_DISTRO_SUSE
	select HAVE_DISTRO_PREFERS_REGISTRATION
	select HAVE_DISTRO_REG_METHOD_TWOLINE
	select VAGRANT_INSTALL_PRIVATE_BOXES
	select HAVE_CUSTOM_KDEVOPS_GIT
	select HAVE_CUSTOM_KDEVOPS_GIT_DATA
	select HAVE_CUSTOM_KDEVOPS_DIR
	help
	  This option will set the target guest to SUSE. There is currently
	  no scriptable way to download vagrant images, however the images
	  are available for download via:

	    https://suse.com/download

config VAGRANT_FEDORA
	bool "Fedora"
	select HAVE_DISTRO_XFS_PREFERS_MANUAL if FSTESTS_XFS
	help
	  This option will set the target guest to Fedora.

endchoice

config HAVE_VAGRANT_BOX_VERSION
	bool
	default n

source "vagrant/Kconfig.debian"
source "vagrant/Kconfig.opensuse"
source "vagrant/Kconfig.fedora"

if HAVE_SUSE_VAGRANT
source "vagrant/Kconfig.suse"
endif # HAVE_SUSE_VAGRANT

config VAGRANT_BOX
	string "Vagrant box"
	default "debian/testing64" if VAGRANT_DEBIAN_TESTING64 || !VAGRANT
	default "debian/buster64" if VAGRANT_DEBIAN_BUSTER64
	default "opensuse/Tumbleweed.x86_64" if VAGRANT_OPENSUSE_X86_64_TW
	default "fedora/32-beta-cloud-base" if VAGRANT_FEDORA_X86_64_32_CLOUD_BASE
	default "opensuse/Leap-15.3.x86_64" if VAGRANT_OPENSUSE_X86_64_LEAP_15_3
	default "Leap-15.4.x86_64" if VAGRANT_OPENSUSE_X86_64_LEAP_15_4
	default VAGRANT_SUSE_BOX if VAGRANT_SUSE
	help
	  The vagrant box to use.

config VAGRANT_PREFERRED_KERNEL_CI_SUBJECT_TOPIC
	string
	default VAGRANT_BOX if VAGRANT_DEBIAN_BUSTER64


config HAVE_VAGRANT_BOX_URL
	bool

if HAVE_VAGRANT_BOX_URL

config VAGRANT_BOX_URL
	string
	depends on HAVE_VAGRANT_BOX_URL
	default VAGRANT_SUSE_BOX_URL if HAVE_SUSE_VAGRANT
	default "https://download.opensuse.org/repositories/Virtualization:/Appliances:/Images:/openSUSE-Leap-15.4/images/boxes/Leap-15.4.x86_64.json" if VAGRANT_OPENSUSE_X86_64_LEAP_15_4

endif # HAVE_VAGRANT_BOX_URL

if HAVE_VAGRANT_BOX_VERSION

config VAGRANT_BOX_VERSION
	string "Vagrant box version"
	default "1.0.20210915" if VAGRANT_OPENSUSE_X86_64_TW_1020210915
	default "1.0.20210203" if VAGRANT_OPENSUSE_X86_64_TW_1020210203
	default "1.0.20200714" if VAGRANT_OPENSUSE_X86_64_TW_1020200714
	default "1.0.20210203" if VAGRANT_OPENSUSE_X86_64_TW_1020210203
	default "32.20200312.0" if VAGRANT_FEDORA_32_202003120
	help
	  The vagrant box version to use. This is set for you depending on the
	  image you select. You can manually override the version we have last
	  tested here.

endif # HAVE_VAGRANT_BOX_VERSION

if !HAVE_VAGRANT_BOX_VERSION

config VAGRANT_BOX_VERSION
	string
	default ""

endif # !HAVE_VAGRANT_BOX_VERSION

config VAGRANT_LIBVIRT_INSTALL
	bool "Installs libvirt"
	default y if KDEVOPS_FIRST_RUN
	default n if !KDEVOPS_FIRST_RUN
	help
	  If this option is enabled then the ansible role which installs
	  libvirt for you will be run. The goal will be to ensure you have
	  libvirt installed and running.

config VAGRANT_LIBVIRT_CONFIGURE
	bool "Configure libvirt so you spawn guests as a regular user"
	default y if KDEVOPS_FIRST_RUN
	default n if !KDEVOPS_FIRST_RUN
	help
	  If this option is enabled then the ansible role which configures
	  libvirt for you will be run. This typically just requires adding the
	  user to a specific set of groups. The user must log out and back
	  in again, to ensure the new group takes effect. The goal in the
	  configuration will be to ensure you can use libvirt to spawn guests
	  as a regular user. You are encouraged to say y here unless you know
	  what you are doing or you already know this works. If you are unsure,
	  the litmus test for this is if you can run vagrant up, on any public
	  demo box available.

config VAGRANT_LIBVIRT_VERIFY
	bool "Verify that a user can spawn libvirt as a regular user"
	default y if KDEVOPS_FIRST_RUN
	default n if !KDEVOPS_FIRST_RUN
	help
	  To enable a user to be able to spawn libvirt guests as a regular user
	  a user is typically added to a few groups. These groups are not
	  effective immediately, and so before a user can assume that they
	  use vagrant they must verify that the required groups are effective.
	  If you enable this option, we will spawn an ansible role that will
	  verfify and ensure that your user is already part of these groups.
	  You can safely say yes here.

config VAGRANT_INSTALL_PRIVATE_BOXES
	bool "Install private vagrant boxes"
	default y
	help
	  If this option is enabled then the ansible role which installs
	  additional vagrant boxes will be run. This is useful if for example,
	  you have private vagrant boxes available and you want to use them.
	  You can safely disable this option if you are using only public
	  vagrant boxes. Enabling this option is safe as well, given no
	  private boxes would be defined, and so nothing is done.

endif # VAGRANT
