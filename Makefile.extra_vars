# SPDX-License-Identifier: copyleft-next-0.3.1
#
# This specifies how we generate the extra_vars.yaml file

EXTRA_VAR_INPUTS += most_extra_vars
EXTRA_VAR_INPUTS += most_extra_vars_separated

# This ensures that for instance running 'make fstests-baseline-loop' will
# have the respective filesystem configuration file
# /var/lib/xfstests/configs/${HOST}.config get updated *with* a respective
# correct value in case you do dynamic updates to the .config.
# The extra_vars.yaml file will get the correct updated values, not the
# defaults from fstests/defaults/main.yml so long as the file
# workflows/fstests/Makefile also updates
EXTRA_VAR_INPUTS += $(KDEVOPS_PLAYBOOKS_DIR)/roles/*/defaults/main.yml

null :=
space := ${null} ${null}
${space} := ${space}

define YAML_ENTRY
$(1)

endef

define YAML_ENTRY_SEP
$(subst +, ,$(1))

endef

# We can transform most of .config things we need to using
# looping on ANSIBLE_EXTRA_ARGS and converting those with
# this target. If you need to do more complex fancy stuff
# extend the EXTRA_VAR_INPUTS variable in your workflow with
# your custom stuff.
most_extra_vars:
	@echo --- > $(KDEVOPS_EXTRA_VARS)
	@$(foreach exp,$(ANSIBLE_EXTRA_ARGS),echo $(call YAML_ENTRY,$(subst =,: ,$(exp)) >> $(KDEVOPS_EXTRA_VARS)))

# ANSIBLE_EXTRA_ARGS_SEPARATED is to be used for variables in .config
# which are separted by spaces. We use a trick and assume .config variables
# won't have the sign "+" so substitute spaces for "+" for looping over them and
# then substitute the "+" for the space when echoing the variable again.
most_extra_vars_separated:
	@$(foreach exp,$(ANSIBLE_EXTRA_ARGS_SEPARATED),echo $(call YAML_ENTRY_SEP,$(subst =,: ,"$(exp)") >> $(KDEVOPS_EXTRA_VARS)))
