---
- name: Import optional extra_args file
  include_vars: "{{ item }}"
  ignore_errors: yes
  with_first_found:
    - files:
      - "../extra_vars.yml"
      - "../extra_vars.yaml"
      - "../extra_vars.json"
      skip: true
  tags: vars

- include_role:
    name: create_data_partition
  tags: [ 'data_partition' ]

# Distro specific
- include: tasks/install-deps/main.yml

- name: Get nproc
  command: "{{ num_jobs }}"
  tags: [ 'selftests', 'build', 'bltkrace' ]
  register: nproc

- name: Build blktrace
  tags: [ 'selftests', 'build', 'bltkrace' ]
  make:
    chdir: "{{ blktrace_data }}"
    jobs: "{{ nproc.stdout }}"

- name: Reboot system before our test so we know everything is sane
  tags: [ 'selftests', 'run_tests', 'reboot' ]
  become: yes
  become_method: sudo
  reboot:
    post_reboot_delay: 10

- name: Set the path to selftests workflow
  set_fact:
    selftests_workflow_target: "../workflows/selftests/"
  tags: [ 'selftests', 'run_tests', 'copy_results', 'prior_run', 'print_results' , 'augment_expunge_list' ]

- name: Set the path where we collect our selftests results
  set_fact:
    selftests_results_target: "../workflows/selftests/results/"
    selftests_results_full_path: "{{ topdir_path }}/workflows/selftests/results/"
  tags: [ 'selftests', 'run_tests', 'copy_results', 'prior_run', 'print_results' , 'augment_expunge_list' ]

- name: Print uname for each host
  tags: [ 'selftests', 'run_tests' ]
  debug: var=ansible_kernel

- name: Get used target kernel version
  tags: [ 'selftests', 'copy_results', 'augment_expunge_list' ]
  command: "uname -r"
  register: uname_cmd

- name: Store last kernel variable
  set_fact:
    last_kernel: "{{ uname_cmd.stdout_lines | regex_replace('\\]') | regex_replace('\\[') | replace(\"'\",'') }}"
  tags: [ 'selftests', 'copy_results', 'augment_expunge_list' ]
  run_once: true

- name: Document used target kernel version
  local_action: "shell echo {{ last_kernel }} > {{ selftests_results_target }}/last-kernel.txt"
  tags: [ 'selftests', 'copy_results', 'augment_expunge_list' ]
  run_once: true

- name: Load configfs module
  tags: [ 'selftests', 'run_tests', 'configfs' ]
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  command: "modprobe configfs"
  when:
    - kdevops_run_selftests|bool

- name: Clear out old results directory on target hosts
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  file:
    state: absent
    path: "{{ selftests_data_target }}/results/"
  tags: [ 'selftests', 'run_tests', 'clean_results' ]

- name: Hint to watchdog tests are about to kick off
  local_action: file path="{{ selftests_workflow_target }}/.begin" state=touch
  tags: [ 'selftests', 'run_tests' ]
  when:
    - kdevops_run_selftests|bool
  run_once: true

- name: Enable low-level messages on console
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  command: sysctl kernel.printk="8 8 1 7"

- name: Run selftests using oscheck.sh
  vars:
    group: "{{ ansible_host | regex_replace('selftests-') | regex_replace(kdevops_host_prefix + '-') | regex_replace('-dev') | regex_replace('-', '_') }}"
  tags: [ 'selftests', 'run_tests' ]
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  command: "./oscheck.sh --print-start --print-done --test-group {{ group }} {{ oscheck_extra_args }} {{ all_limit_tests }}"
  ignore_errors: yes
  no_log: True
  args:
    chdir: "{{ selftests_data_target }}"
  environment:
  when:
    - kdevops_run_selftests|bool

- name: Remove watchdog hint that tests have started
  local_action: file path="{{ selftests_workflow_target }}/.begin" state=absent
  tags: [ 'selftests', 'run_tests' ]
  when:
    - kdevops_run_selftests|bool
  run_once: true

- name: Clean up our localhost results/last-run directory
  local_action: file path="{{ selftests_results_target }}/{{ item }}" state=absent
  with_items:
    - "last-run"
  loop_control:
    label: "{{ item }}"
  run_once: true
  tags: [ 'selftests', 'copy_results', 'clean_local_results' ]

- name: Look for results for the last run
  tags: [ 'selftests', 'copy_results' ]
  become: yes
  become_flags: 'su - -c'
  become_method: sudo
  find:
    paths: "{{ selftests_data_target }}/results/"
    recurse: yes
    patterns: "*"
  register: last_run_results
